<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LIYI&#39;S BLOG</title>
  
  <subtitle>liyi的个人博客</subtitle>
  <link href="https://liyi20.github.io/atom.xml" rel="self"/>
  
  <link href="https://liyi20.github.io/"/>
  <updated>2023-09-15T06:04:10.032Z</updated>
  <id>https://liyi20.github.io/</id>
  
  <author>
    <name>LIYI</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leetcode刷题日记</title>
    <link href="https://liyi20.github.io/posts/648041a1.html"/>
    <id>https://liyi20.github.io/posts/648041a1.html</id>
    <published>2023-09-15T06:04:10.032Z</published>
    <updated>2023-09-15T06:04:10.032Z</updated>
    
    
    <summary type="html">本来计划从大一的暑假开始，结果暑假实在是太摆烂了，玩了三个月，到了大二我才开始正式地刷leetcode，此文记录我的刷题日常和心得</summary>
    
    
    
    
    <category term="study" scheme="https://liyi20.github.io/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>写给即将步入大二的我</title>
    <link href="https://liyi20.github.io/posts/e2831dc5.html"/>
    <id>https://liyi20.github.io/posts/e2831dc5.html</id>
    <published>2023-09-15T06:04:10.032Z</published>
    <updated>2023-09-15T06:04:10.032Z</updated>
    
    <content type="html"><![CDATA[<h3 id="致即将步入大二的wbl："><a href="#致即将步入大二的wbl：" class="headerlink" title="致即将步入大二的wbl："></a>致即将步入大二的wbl：</h3><p>&emsp;&emsp;你好！</p><p>&emsp;&emsp;马上你就要踏上列车，回到那个你曾感到过得无比委屈的大学校园里了。不知道你是否在这三个月的假期里是否已经调整好了自己的状态，可以真正地融入到这个明明大家都觉得是人生中最美好而你却总觉得格格不入的大学中。或许你自己也不知道，因为你一直都是一个胆小的人，一个从小几乎没有遇到过什么挫折的人，一个十分看重别人对你自己的看法的人，在这个开放的环境之下，变成了一个非常普通的人，没有了曾经的熟悉感，一直走在只有自己一个人的路上，你当然会觉得很难在这里找到自己生活的意义。这也是你为什么想要着急地回家，这里的空气仿佛都要将你吞没一样，你甚至除了网络连一个人说话都没有。</p><p>&emsp;&emsp;其实我一直想直接揭开你的伤疤，因为这一年你在学校已经纯纯地变成了一个废柴，不想吃早饭，不想晒被子，不想打理头发，甚至已经不想出门了。让我想想你在宿舍里都在做什么呢？每天早上九点到十点起床，打两个小时游戏，然后穿上鞋子，看着室友在宿舍写着高数作业，你又想起了自己不堪的成绩，尴尬地喊着他们一起去吃饭，然后你听着他们谈论着刚做的题目，自己无处遁形，只能用手机来掩饰自己的不堪，然后吃饭。十分钟后你们又回到了宿舍，你开始刷b站，知乎，校园论坛。其实你并不想刷的，但是你找不到一点事情去做，和学习相比，你觉得还是刷手机更好受一点。相信我，你不会去睡午觉的，即使你已经感到有点困了，顶多在桌子上趴上十分钟，五点半到了，你开始拖着疲惫的身体去吃晚餐，哦，对了，你的午餐和晚餐几乎从来没有变过哦，连吃饭你都不愿意去尝试了。</p><p>&emsp;&emsp;看着你如此狼狈的样子，我没有一丝的怜悯，我甚至想嘲笑你。不过我也为你感到庆幸，因为你终于无处可逃了，你必须面对那些曾经一直逃避的东西了，我想你应该比谁都需要这些东西，你也需要尝尝当废物的滋味。没有什么是一成不变的，你所怀念的已经不会回来了，在你面前的是你自己选择的未来，一个真正没有其他人可以干预的未来。如果你继续这样害怕出丑而放弃尝试各种机会，那么你的人生也就将这样平淡无味，当然你不会在人群中出丑，不过代价就是你一生都将为了逃避别人的目光而活着。总是避免成为你所谓的小丑，只会让你成为真正的小丑。物质和精神当然有关系，不过也没有绝对的对应关系，不要再把自己不愿花钱当作你不愿迈出去的借口吧。就算你谈了恋爱确实会增加你的经济压力，不过为什么你不敢去出去赚回来呢？精神上的缺乏除了你自己，没有人能够帮助你，这个世界上没有什么奇迹不奇迹的，就算有，你愿意用自己的一生去赌那么小的概率吗。每个人的第一次都会是尴尬的，当你尝试后你会少一个尴尬，而当你选择逃避的时候，你是否有想过或许明天，一个星期之后，一年之后，你又会面临同样的尴尬呢？你的尴尬只会越积越多，你的人生也将在小心翼翼和尴尬中度过。</p><p>&emsp;&emsp;其实你害怕的从来都不是成绩差，而是害怕别人会看不起你。其实成绩差只能说算一个缺点，只是当周围的所有人都在给你强加上了一个固化的思想观念，他们从小就告诉你成绩差就一定会低人一等，会过上不幸福的生活，搞得好像成绩差就不应该存在这个世界一样，你自然就会觉得你做任何和学习无关的事情都有一种强烈的负罪感。即使现在你已经在大学了，这种负罪感依然强烈，而且他们又在逼你去读研究生了。我不知道这种对成绩的恐惧感什么时候能够消失，或许只要在这里就永远不会，以后工作也有考核，当你为人父母的时候你又会为孩子的成绩所恐惧。就算你已经无法摆脱这些恐惧，我仍希望你能够在找到更多其他有趣的事情吸引你的注意力来淡化你的恐惧，而不是陷入自我的挣扎中。</p><p>&emsp;&emsp;我渐渐发现我会很怀念曾经的时光，你很幸运，能够在这短短的十几年里遇到这么多愿意陪你一起笑或逗你笑的人，仿佛每一天都充满欢声笑语。希望在接下来的日子里，你能够依旧保持乐观，去感受这个世界的可爱面，早日走出自己的舒适圈，找到更多能陪你继续笑着走下去的人，去追逐你所期待的笑容。相信到你能够坦率地展示自己的时候，你可以重新拾起那份快乐，也能够大胆地和他人一起笑着向前。</p>]]></content>
    
    
    <summary type="html">今天突然心血来潮想写一点东西给即将要步入大二的我，希望我能够发现生活的美好，找到自己所存在的意义，不再迷茫彷徨，在之后的大学生活中能够享受自己这美好的青春年华……</summary>
    
    
    
    
    <category term="thought" scheme="https://liyi20.github.io/tags/thought/"/>
    
  </entry>
  
  <entry>
    <title>我的vim学习</title>
    <link href="https://liyi20.github.io/posts/2562565d.html"/>
    <id>https://liyi20.github.io/posts/2562565d.html</id>
    <published>2023-09-15T06:04:10.032Z</published>
    <updated>2023-09-15T06:04:10.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的vim学习"><a href="#我的vim学习" class="headerlink" title="我的vim学习"></a>我的vim学习</h1><blockquote><p>此篇文章用于记录我在vim学习中的知识点，便于自己的复习使用，需要注意的是，有大量中文的时候就不要使用vim了，中英文的相互的切换非很麻烦， 而vim的操作都是用英文的符号。</p></blockquote><h2 id="vim-的模式"><a href="#vim-的模式" class="headerlink" title="vim 的模式"></a>vim 的模式</h2><p>vim的模式主要有4种：  </p><ol><li>normal模式,普通模式，在此模式下，可以进行浏览，查找到自己想要找的代码。常用的快捷键有，gg（回开头），G（回结尾），ngg或者nG（到第n行），nj，nk（上下移动n行）,fx(find x，光标跳转到x字符处)。</li><li>inset模式，用于写入，i在光标前写入，I在行前写入，a在光标后写入，A在行尾写入。</li><li>visual模式,visual模式主要是为了选中操作，用于比较精细的选中进行d，c，y操作。</li><li>命令模式<h2 id="vim的基本键位"><a href="#vim的基本键位" class="headerlink" title="vim的基本键位"></a>vim的基本键位</h2></li></ol><ul><li>vim一览表<br><img src="https://pic.imgdb.cn/item/64996d5e1ddac507cc381b9a.png" alt="vim的基本键位"></li></ul><p>vim的基本操作可以看作是由三部分组成</p><ol><li>光标的移动，就是光标的上下左右的操作，以及快速地定位到确定的位置.常见的操作有字符级hjkl，单词级wbege，行级0$^，段落级{}，</li><li>动作（motion）用于精确地确定操作的对象，包括括号、空格的控制，有i、a两种，i是inside，不包含外面的括号等符号；a是包括这些东西。它们与(),{},””,’’相互搭配，来实现快速地选中操作。</li><li>操作，操作就是删除d、改写c、复制y、粘贴p；vim中的p既可以粘贴y的内容，也可以粘贴d的内容，如caw，cc,dd,2cc,2dd,daw,yy,2yy</li></ol><hr><blockquote><p>感觉我现在直接学习用vim写的话，还是非常困难的，尤其是现在我连基本的变成语法都没有熟悉的情况下，改成用vim来编写程序真的很困难。所以我决定还是先练习算法，等自己真正地把技术掌握了需要提高自己的生产力 的时候再来使用vim，毕竟vim只是一个工具，还是自己怎么快乐怎么过的比较好。所以我的vim学习就到此了，基本上就是大致了解了一下是怎么操作的，等以后需要的话我再来看看吧。</p></blockquote>]]></content>
    
    
    <summary type="html">用于记录我的vim学习过程</summary>
    
    
    
    
    <category term="study" scheme="https://liyi20.github.io/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>随想5.8</title>
    <link href="https://liyi20.github.io/posts/88bb545c.html"/>
    <id>https://liyi20.github.io/posts/88bb545c.html</id>
    <published>2023-05-08T18:53:00.000Z</published>
    <updated>2023-09-15T06:04:10.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="随想5-8"><a href="#随想5-8" class="headerlink" title="随想5.8"></a><center>随想5.8</center></h1><p>&emsp;&emsp;我经历了大学的第一个五一，第一次准备好了出门去玩。虽然在上个学期我已经有过像国庆7天的超长假期，但是那时我并没有出去玩，因为疫情的影响，更多的是自己对未知的胆怯吧，也没想过出去玩。虽然在大一下在此之前的时候，我出去过两次，一次是刚刚回校的时候和黄豆、法王一起去看的豫园的灯会，那时我第一次到外滩，看到了东方明珠，也看到了周围的金碧辉煌；第二次是我在几次在学习方面受挫（其实就是自己在一些实验、实践课上表现不是很好被打了低分，加上开开始学习的强度比较高，基本上没有打游戏了，所以感到好压抑），然后就和法王一起去了人民公园、博物馆、欢乐谷，那个时候因为心情很压抑，所以在欢乐谷的时候，我把所有高难度的项目基本上都完了一遍（像大摆锤这种很吓人的都去尝试了），想要在刺激中放松一下自己的心情。</p><p>&emsp;&emsp;这个五一我出去完了整整3天，在宿舍打了两天的游戏，主要是我沉迷于刚开服的星穹铁道了，玩了才知道，原来我米游社账号的头像就是三月七（三月七真的太可爱了❤️）。因为我附近的两个同学要来上海玩，所以我也就和他们一起去玩了，其实搅乱了我原本的计划。第一天又去了欢乐谷，不过这人多的吓人，基本上没有玩什么，不过我尝试了跳楼机（上次没玩的项目），晚上多了烟花展，不过没吃晚饭，回去就十一点了。第二天他们先来了交大，我带着他们转了一下，不过天气太热了，基本上也没转什么，下午去了复旦某个校区，不过好像也没啥转的，复旦比交大闵行更古典一点吧，我们在草坪上打了两个小时的王者。晚上在五角场转了两个小时，结果还是没有找到摆摊的小吃街，于是又去了什么七宝夜市，其实…………根本没有夜市，我的评价是，还不如商场……在那里随便吃了一顿。</p><p>&emsp;&emsp;第三天就是重头戏了，因为第三天是cp29漫展，这时我第一次参加漫展，其实我想在上海也就是想去看看cp29漫展的，我早早地就想好了去抢票，并成功给我的同学也抢到了一张。于是早上6点，我就踏上了赶路之旅（我一个舍友也和我一起的），和同学会和之后，我们就上了公交车，不得不说二次元真的挺多的，光是在6点多的公交车上，我就看见了不少的coser，没吃早饭，坐了两个小时公交和地铁，终于我们到达了国家会展中心。不过此时人已经很多了，真的是人山人海，不过看到这么多美女coser们，还是很期待的，不过两个多小时的排队，还是很折磨人的，我是真的害怕会发生踩踏事件。不过二次元们还是比较遵守规矩的，没有比较大的突发情况发生，其实两个多小时就排到了，我觉得还挺快的。接图</p><p><img src="https://pic.imgdb.cn/item/64996cd11ddac507cc3752c4.jpg" alt="人群"></p><p><img src="https://pic.imgdb.cn/item/64996cd11ddac507cc3752f3.jpg" alt="人群"></p><p>&emsp;&emsp;不过因为是第一次去这样的漫展，基本上还是什么都不懂的，最好还是带上相机，找coser们拍照。很多人来就是买物料啊，我觉得在那里排一天的队，有一点太无趣了。不过我怎么感觉好多二次元手游，感觉都不认识，而且米家的游戏只有一个崩坏学园2，所以就在王者那多待了一会，coser们还是很漂亮的，而且上去合影还能抽奖，当然就是给个大袋子。至于我买了啥，其实刚进去除了企业摊位之后，我也不知道该怎么买东西。感觉我看的番都很少诶。于是我在原神摊位上买了一点东西，觉得比较好的就是pixiv上某个画师画的爷做得相框。然后就又买了一本pixiv的年鉴，其他的都零零散散，好吧，花了挺多钱的。不过买东西我觉得不是主要的，看coser才是主要好吧！美女超多！😋</p><p><img src="https://pic.imgdb.cn/item/64996cd11ddac507cc37532d.jpg" alt="coser"></p><p><img src="https://pic.imgdb.cn/item/64996cd21ddac507cc375385.jpg" alt="coser"></p><p><img src="https://pic.imgdb.cn/item/64996d0e1ddac507cc37a777.jpg" alt="coser"></p><p><img src="https://pic.imgdb.cn/item/64996d0e1ddac507cc37a7c9.jpg" alt="coser"></p><p>&emsp;&emsp;好了，我的五一基本上就结束了，但是还是不想学习，即使马上就要进行英语的ept，还是没学习，打了好几天的游戏。感觉自己就是不想学习，唉。五一最后一天我的手机从上铺掉了下来，摔坏了，但即使没有手机，我还是看电脑看了一天。今天早上甚至8点多才醒，直接错过早八，而且感觉好多课都学不会了。上习思想的课的时候，感觉一个班就我一个看手机看了三节课，别人都在学习，giao。</p><p>&emsp;&emsp;虽然我不是非常在意我的分数，在意排名，但是我也不希望垫底，不希望自己变成不学习的人，不卷不代表不去努力走自己想走的道路，而哪一种道路都需要我不断地学习，而且现在学的还有很多对我未来有帮助的课程。我见到了人世间的繁华，也见到了外面的世界其实有很多有趣的地方，它们正等待着我去探索，而我也应该以更积极的心态去看待生活，看待学业。愿自己在接下来的时间里，能够静下心来，去做自己想做的事，成为自己想成为的人。与自己共勉，加油！</p><p align="right">2023年5月8日</p>]]></content>
    
    
    <summary type="html">在大一下的五一后，自己随便想记录一点感想。</summary>
    
    
    
    
    <category term="thoughts" scheme="https://liyi20.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>我的大一</title>
    <link href="https://liyi20.github.io/posts/dfa590a7.html"/>
    <id>https://liyi20.github.io/posts/dfa590a7.html</id>
    <published>2023-04-16T20:55:29.000Z</published>
    <updated>2023-09-15T06:04:10.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的大一"><a href="#我的大一" class="headerlink" title=" 我的大一"></a><center> 我的大一</center></h1><blockquote><p>&emsp;&emsp;其实我写这些是因为我看了很多很牛的学长们写的关于自己的大学生活的文章后，回想自己相对失败的大学生活，也充满了感想。虽然和那些大神们比起来，我是一个普通不过再普通的大学生了，甚至比普通的学生更加普通。没有拿得出手的成绩，没有加入任何社团或其他组织，没有任何社交圈，甚至没有一项能够说的出来的技能。是的，就是这样似乎一无是处的我，依然想记录一下我的大学生活，再平平无奇也不影响我的在这个世界上留下一点印记。      </p></blockquote><hr><h2 id="大一上"><a href="#大一上" class="headerlink" title="大一上"></a>大一上</h2><h3 id="进入交大前"><a href="#进入交大前" class="headerlink" title="进入交大前"></a>进入交大前</h3><p>&emsp;&emsp;在高考出分的那一天晚上，我是很兴奋的，因为对在高考前一天还在输水，并且一直没有睡好的我来说（甚至在高考的第一天失眠到2点，我已经忘了当时的自己是怎么挺过来的，只知道自己考完数学之后回家就哭了），这个成绩真得超过了我的预期，我那天晚上又兴奋得睡不着到2、3点。后来是上海交大的招生组老师找到了我（他也是我们高中毕业的），经常给我打电话，让我考虑。但是当时我在准备清华的强基，不过我也知道自己考过的可能非常小，果然，最后在郑州玩了两天就回来了。后来学校找到我，想要我去北医（只是为了增加自己去清北的人数），但是我知道自己这么胆小的性格，见不得血，更不用说如果没把病人治好，自己要为此内疚一辈子这种事。我是这样的人，经常会很在意别人对自己看法，会对自己的错误耿耿于怀很久，所以我拒绝了。我决定去交大了，至于浙大和复旦，我自认为交大工科更强一点，而且其他学校的招生组没有和我联系过我。  </p><p>&emsp;&emsp;至于我的专业选择，刚开始我对专业什么的没有一点意识，我的前17年只听说过某某某上了什么大学，从没有听到一点关于专业的事情，学校也是一样，老师对各种专业也是一无所知。虽然我有两个姐姐，但是她们能够给我的建议也是很少，因为她们也不知道自己为什么选了当前的专业。我的信息来源主要来自知乎，当时一直在看杜大佬工科试验班的分析（详见<a href="https://www.zhihu.com/column/c_1254209571738357760">贵交那些事</a>），还有一些对ieee的负面消息。后来我就把人工智能和ieee放到了第一志愿，把工试放在了第二位（通过往年的排名分析，如果我进了工试，基本上就能进cs了，当时就想着，第一志愿没录上，就直接去cs了）。录取的时候自己与ieee差了1分，去了工试。    </p><p>&emsp;&emsp;关于交大的致远计划，我自己饱受了高中读书的痛苦，于是直接想家长表态，自己不适合去致远，我更想要比较自由享受的大学生活（实际上，我现在过的和我以为的大学生活完全不一样），于是没有参加致远对的面试。  </p><h3 id="初到交大"><a href="#初到交大" class="headerlink" title="初到交大"></a>初到交大</h3><p>&emsp;&emsp;刚来到交大的时候，自己是有一股傲气的，因为自认为自己高考分数比别人高，而且是在有百万考生的省份。军训的时候，没有一个认识的人，也基本上内有和别人说过话。后来军训完了只上了半天的课，学校就被封了，因为有同学是密接。再后来就是断断续续的几个月的封控时间。是的，我来交大的第一印象就是疫情封控，吃了好久的盒饭。不过比较好的是封控的盒饭是免费的，而且会发放泡面、水果等。  </p><h3 id="大一生活"><a href="#大一生活" class="headerlink" title="大一生活"></a>大一生活</h3><p>&emsp;&emsp;我入大学的第一场考试应该是交大的英语分级考试，当时似乎还在军训，就随便去考了，不过这考试似乎没什么意思，对于没有听力基础的我而言，做得可想而知，后来到了大英2。因为疫情，所以工试的能力测试推迟到了十月份，自己随便做了两道逻辑题之后就直接去考了，考了700多人的200多名吧，不过这考试也没有什么意思，毕竟高考分占主导。我高考分排二十多名，综合之后排到了29名，不过都在意料之中，然后我就和家长说了一声，就去了cs，因为没什么好选择的。    </p><p>&emsp;&emsp;第一次比较正式的考试就是高数的期中考试了，在前一周的时候，每天晚上我都泡在图书馆里，当然我是一个不太自律的人，即使在图书馆里，我也并不会一直复习，我会经常性的走神，或者看手机，去图书馆也知识为了感动自己吧。然后就考了一个寝室倒数，当然可能我现在的成绩也在寝室垫底。当时还是比较失望的，感觉怎么怎么样的，但是我是那种学习热情很会就消散的，突然脑门一热，就去认真学两天，后来有开始自己我行我素了。    </p><p>&emsp;&emsp;之后我和舍友参加了工程学导论老师要求的结构竞赛，（当然这是门金课，期末让你造火箭的那种）结构竞赛嘛，就随便裁了裁木条，搞了就直接参赛了，结果没有承受住沙包的重量以失败告终，不过好在我们猜对了获胜的几支队伍，赚了几瓶可乐，我记得是那天下着绵绵细雨浑身湿透了，去二餐吃了一次那个脆骨咖喱，喝着可乐还是比较惬意的。至于我的工程学导论期末作业，我突然想到有没有自动叠衣服的机器，就直接在网上收到了一台自动叠衣服机器的视频，当然它给的经费肯定不够买这种大型机器的。我们仿照着它的工作原理大致规划了它的实现。但是这对于全是小白的我们完成这项任务是不可能的，因为我们不会用单片机，甚至当时我都不知道单片机是什么，代码更不用说了，只学了程序设计，而且当时我的代码水平真的菜得没话说，基本上让程序不报错都不可能。于是我们采用了最简单的机械装置，简单来说，就是我在淘宝上买了一个摇摆机，通过它的机械臂的旋转来实现叠衣服的部分（现在它还在我家里放着），然后就用一个定时器让它刚好运动一个来回。不过说实话，即使这样，实现对我们还是有很多困难的，幸好期末因为疫情提前回家了，然后就每个人演示一部分功能的实现水水就过去了。结果这还以班里第二去参加了校级评比………我能说什么呢，第一是两个大二降转过来的带的队，很高级的晾衣自动寻光装置……人家本来是建筑还是什么专业的，其中一个与我组队过两次，比较熟了，他转到了微电子，后来大一下在致远转入名单里看到了他（致远转入的要求是专业前百分之十）。接着我们就作为陪衬参加了线上展示，结果因为我们的项目实在太烂，连出镜的机会都没有。他们一个个地在那展示各种高科技的东西，真的让我惊掉了下巴，这就是交大的大一学生吗，大一就能写各种软件，单片机用的6得一批。    </p><p>&emsp;&emsp;让我印象深刻的是其中有一个是我羽毛球课上的同学，他之前没有打过羽毛球，所以课上一直很焦急很慌张（交大第一学期强制体育课不能自己选）。体育课上或许他像一个小丑一样，但是在展示的时候那种自如，那种身着正装的认真，那种自信、那种气势真的让我以为不是同一个人……后来他拿了一等奖，给了我深深的震撼。后来我才发现，身边看似不起眼的人，都在默默闪光……  </p><p>  &emsp;&emsp;嗯，另一个让我印象比较深的事情可能是英语课上，和一个女同学分到了一组，可能是因为这是我在交大第一次和异性分到了同一组吧🫠当时是在家里线上的，当时是早八，我还困得很，我的英语水平很差，特别是我的听力，当时我就几乎啥都没听到。然后是自己说说自己的interests，我经常会说着说着就卡住了，然后她给我说了声加油……好吧，挺温暖的，至少对我这个陌生人是这样的，至少我做不到给别人说加油。这个女生其实我见过很多次了，因为大一上的课是相邻的班级一起上，线下的话，还是比较腼腆的。不过后来就没有后来了，因为不同专业当然上课时间有比较大的不同。开学之后我也在路上见过她几次，对视过几次，不过也就这样吧，不管她记没记得住我，还是感谢她给刚刚阳过的我带来了一些温暖……</p><p>  &emsp;&emsp;在回家的期间，我阳了，而且快期末了。阳了之后我的味觉非常的不好，基本上吃什么都没有味道，而且我家里都阳了，做饭也就能简就简，我的食欲就很差，那几天过得比较难受。其实我基本上就没怎么复习……在考试前的时候我还在摆弄一些奇怪的东西。第一门考高数的时候，卷子分发延时了30分钟，全是选择，又全像大题……结果家里突然有人来了，giao，我是真的烦。然后我选择了重考，结果期末成绩改规则成开根号乘十，我重考比我之前还第一分……其他都比较中规中矩吧，英语也考得很差，看着自己排名从十几掉到了四十，后来重考时候，到了五十。好了，期末就这样落下了帷幕。  </p><h3 id="大一上的寒假"><a href="#大一上的寒假" class="headerlink" title="大一上的寒假"></a>大一上的寒假</h3><p>&emsp;&emsp;接着是享受自己快乐的寒假时光。之前提到自己在期末考试之前在摆弄一些奇怪的东西。其实就是我看到工试群里的qqbot之后，自己也想弄一个玩玩，就在网上找了nonebot的教程，其实自己啥都不知道，就知道对着视频一步一步地做，结果没做出来，也不知道哪里出了问题。到了寒假之后，我也尝试过好几次，但是都以失败告终，不过我收获了一点使用github的技能。 </p><p>&emsp;&emsp;然后我又突发奇想去建一个自己的网站。寒假里大概花了几天的时间去学习html+css，当然也是浅尝而止，但是就这样，我就开始了自己html文件的构建，初步打算是建一个能够记录自己看的番，把每个番再单独做一个html来简单的介绍。当然想像是非常好的，但是网页的从零搭建的困难度是超过我的想像的，其实很好想，随便打开一个网页，查看网页源码之后你就会发现，那个代码量全靠自己一个人一点点地打出来是很恐怖的。当然我也没想过做这么复杂的网页，就能看得过去就行，于是我就创建了我人生第一个html文件<a href="https://liyi20.github.io/LIYI20.gethub.io2/">利忆的私人网站</a>，并把它部署到了github上，当然本来准备进行的后续更改也没有进行，所以全是古河渚图片，因为我现在忘完了（乐😁）。当然因为github访问的不稳定，加上我基本上就是图片加上视频，访问那叫一个慢啊，然后我就基本上没怎么摆弄过这个网站了。<br><img src="https://pic.imgdb.cn/item/648eb7fa1ddac507cc876967.jpg" alt="截图" title="截图"></p><p>&emsp;&emsp;好吧，其实我寒假基本上都没有学什么新知识，然后就到了过年玩耍的时候了。不过我似乎丧失了对游戏和对番剧的热情，我几乎是逼迫自己去看的，但是我却再也找不到那种激情了，游戏也是如此。我开始逐渐和家人和亲戚一起交流，一起随便的唠唠嗑，然后我就会发现这样似乎很也很好，感觉很热闹（可能是我在大学冷清惯了），现在才渐渐发现大家一起吃吃饭，一起唠唠嗑或许就是人生中的小确幸……  </p><p>&emsp;&emsp;后来班长召集我们同学聚会，我感到很兴奋，因为自己在家里过得还是比较空虚，然后就很开心地赴约了。在那前几天的时候，我也和几个同学一起去完了密室逃脱。同学聚会那天，看到那么多熟悉的面孔，真的很感动啊，大家还是那样的打打闹闹，勾起了很多美好的回忆。大家也基本上都到齐了，班长也把老师带了过来，回想高中的时候大家也和老师们玩的不亦乐乎，还是好怀念啊。然后大家一起打麻将，一起在食堂里的滑滑梯上玩，一起在门口等待老师们的到来，还有对老鳖进行“友好表示”，和老师一起切蛋糕，一起吃蛋糕、唱歌…………下午大家就在ktv里唱了很久的歌。还是很感谢能够拥有这么一群好伙伴的，和他们度过的时光很让我怀念……  </p><hr><h2 id="大一下"><a href="#大一下" class="headerlink" title="大一下"></a>大一下</h2><blockquote><p>我是在大一下的时候开始记录的，所以之前的内容其实都是我的久远的回忆罢了。大一下更能反映我当时真实的想法吧。  </p></blockquote><h3 id="小珞bot"><a href="#小珞bot" class="headerlink" title="小珞bot"></a>小珞bot</h3><p>&emsp;&emsp;经历了大一上的迷惘，我渐渐融入了大学生活，我不再斤斤计较分数，因为我知道自己并不喜欢做题，更不用说那种做无用功的课。后来开学不久碰到nonebot（详见<a href="https://nb2.baka.icu/docs/">nonebot官网</a>）的更新，让bot的创建简单了很多，即使是我这种什么都不懂的人也能成功地在一个晚上的时间里，成功地创建了自己的bot，后来我将它命名为了小珞bot，当然这个时候的小珞还是什么功能都没有的，而我对python一无所知，所以刚开始我也就是在nonebot的官网里下了一些插件，用在了我的bot里面。但是很多插件其实都是需要配置一下的，而我甚至连最基本的python语法都不了解，也不会配置。于是在后面的时间我自己稍微学习了大概两个下午的python语法（没有系统地学习过，现在连基本语法都忘了😁），但是只是基本的python语法只能让我稍微看懂插件的结构，而插件是基于CQ码的（因为是qq机器人，见 <a href="https://docs.go-cqhttp.org/cqcode/">https://docs.go-cqhttp.org/cqcode/</a> ）我又不得不花费一些时间去学习一下CQ码的使用，不过到这里还是不能完整地看懂别人的插件，还需要了解nonebot的运行流程，事件响应、事件处理、参数获取等。之后就是漫长地在github上寻找插件的过程，自己水平有限，写个收到消息随机回复相册里的一张图片的插件，我都弄了很久。现在还是很感慨的，看似非常简单的一个小功能，背后不知道包含了别人多少努力。下面是小珞bot其中一些功能的展示</p><p><img src="https://pic.imgdb.cn/item/648eb8261ddac507cc87a77f.jpg" alt="截图"></p><p>&emsp;&emsp;后面我就基本上照着别人写的插件，比葫芦画瓢，写了些自己的插件。大部分插件，其实都没有任何技术力，我也仅仅是把别人做好的api拿来自己调用一下，也就是注意别人的api的返回样式，一般json文件接收一下就行了，然后就可以输出了，感觉没啥意思。感觉有点技术的，一个是随机输出，一个是PIL图片的处理（我觉得只是文字太单调了，于是我自己又去稍微学习了一下PIL）。</p><h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><p>&emsp;&emsp;关于随机输出，因为随机输出需要大量的图片资源，所以我决定再自己学习爬虫，将网站的图片批量地下载下来。好在我在寒假的时候，学习了网页的组成元素，所以也稍微能够看得懂爬虫的原理。我打算爬取米游社的coser照片，但是爬取并没有想像的那么简单，后来发现，它每一页的照片大概是20张，如果是热门或者推荐图片，虽然没有什么id参数，但也只有20张，其他每日的图片的id后缀像是随机数，没有找到有啥规律，不过就这样，我还是下载了1G左右的图片。然后就利用随机输出完成了我的genshinCosplay插件。<br><img src="https://pic.imgdb.cn/item/648eb7ad1ddac507cc86f9b6.jpg" alt="截图"></p><h3 id="PIL"><a href="#PIL" class="headerlink" title="PIL"></a>PIL</h3><p>&emsp;&emsp;关于我PIL的使用，首先是在网易插件内尝试的，把网易云音乐的评论，显示在图片上（网易云的评论也是调用别人做好的接口），同时对图片进行一下修饰。不过，一个很大的问题是换行的问题，因为PIL的文字不能自动换行，所以当文字很长的时候，文字会超出图片到外面去，所以我采用的是，限制个数，就是每到多少字，打一个换行符，同时第一行要缩进两个字符。效果如图<br><img src="https://pic.imgdb.cn/item/648eb8631ddac507cc87ff7e.jpg" alt="截图"></p><p>后来我把它应用在了晚安插件上，同时用了pixiv上某画师的一组系列图片作为背景，随机输出一张。不过因为这个文本的中文符号的长度与文字的长度其实是不一样的（这个主要是因为大部分的文本都是半角的，也就是说一个符号只占据了中文字体的二分之一），会有行尾对不太齐的情况，所以在换行的时候，应该把一些符号算做0.5个字符。效果如图<br><img src="https://pic.imgdb.cn/item/648eb8631ddac507cc87ff4e.jpg" alt="截图" title="截图"></p><p>&emsp;&emsp;虽然小珞bot的实现仿佛自己并没有掌握什么技术，在刚开学一个月的时间，它几乎打发了我所有的时间，以至于在后面的高数重考中，自己几乎没有复习，反而比期末分数还要低一分，自己的排名成功掉到了五十多名。但是它对我的意义是非凡的，因为这是我第一次在大学里找到了一点获得感，第一次有自己想要做得事情，而不是日复一日的和所有人一样重复着同样的事情。如果只让我像以前那样学习，为了分数而执着，那这4年过得真没意思。当然不是我不想保研，不想过更好的生活，只是我不想卷，也不一定能够卷的过别人。是的，你可以说我懒，说我不努力，如果这就是大家所谓的努力。</p><h3 id="俄罗斯方块（C-）"><a href="#俄罗斯方块（C-）" class="headerlink" title="俄罗斯方块（C++）"></a>俄罗斯方块（C++）</h3><p>&emsp;&emsp;在小珞bot期间，我逐渐发现一点，只有这种能够看得到的成果的努力才能一直吸引着我。如果仅仅让我从枯燥的语法慢慢地学，而不知道以后它该如何使用的话，很难提起自己学习的兴趣。于是我在网上找了个c++的俄罗斯方块项目，第一次接触制作一个游戏做需要的流程。程序的实现是利用了easyX的图形库，而我现在所接触的都是程序的内部操作，对图形展现基本上什么都不知道。程序的实现虽然不是很难，但还是有些自己所学没有涉及到的知识。关键的话，就是其中一个关键的旋转的算法，这种都是前人探索好的，不过确实也让我意识到了内部算法实现的重要性。代码总共400行左右，配上了clannad的潮鸣，效果如图（可惜我并不会ps，所以就没有换这个背景）</p><p><img src="https://pic.imgdb.cn/item/648eb87e1ddac507cc882fc9.jpg" alt="截图" title="截图"></p><h3 id="大一下的后半"><a href="#大一下的后半" class="headerlink" title="大一下的后半"></a>大一下的后半</h3><p>&emsp;&emsp;后面就是大一下的期中考试了，期中考试拖了很久，快有一个月的时间，而期中考试之后就是五一假期。我很期盼这个五一假期，因为那将是我大学在疫情之后第一次想要好好地出门玩。确实5天时间我出门了3天，当然过得还算开心，毕竟是第一次正式地出门吧。</p><p>&emsp;&emsp;但是有点玩过头了，回来之后才想起来原来14号就要考英语水平考（就是英语期末考试）结果回来之后也没有学习的想法，结果果然不出所料，我英语考试挂了，心情很不好，后面的课程也不是很顺利，每天在游戏里寻找慰藉。有点自暴自弃了真的，就觉得自己什么都做不好，连现在的文字都是我在放假了之后写的，一直拿着自己要期末考试没有多少时间为由，却每天不学习而打游戏。我讨厌我自己。</p><p>&emsp;&emsp;就这样自己在迷茫中度过了大一下半，整个大一下半我只给家里打了两个电话，因为我不想让他们知道现在的我是这么的不堪，就像一个垃圾一样在校园里游荡。我什么活动都没有参加了，甚至素拓啥的，讲坛啥的我也不会去看了，作业也会迟交甚至是不交了。每天重复着上课，吃饭，打游戏，看视频，幻想，睡觉。</p><p>&emsp;&emsp;考试前我一直想着赶快考完试回家逃离这里吧，但当我真正地考完试我才发现，一切仿佛都没有变化。考完和考前竟是一样的生活，我在学校里待了几天，因为我没有报英语六级考试，学校里只有我一个人是在无聊的虚度光阴。我也没有和我的父母说我已经考完了可以回家了，就算我回家了，又能有什么改变呢。但是在寝室里，还是很不放方便的，所以我还是决定回家了。一个人就在他们考六级的时候打着伞走出了校门，发现自己坐地铁时间可能不够了，于是站在校门口叫了一辆网约车，后来发现比我刚来上海的时候车费便宜了不少，我才意识到之前自己打车被坑了。</p><p>&emsp;&emsp;其实在学校里成绩基本上已经都出来了，没有任何意外，基本上每门课都是烂的一塌糊涂。排名又降了，好了彻底垫底了，大一上的时候虽然排名不高，但是除了英语之外其他至少还能看吧，现在已经是烂的不能看了。感觉自己现在的心态连高中好都没有了，没有了曾经的无知，也没有曾经的信仰。</p><p>&emsp;&emsp;是的，现在的我以一幅大人般的姿态，告诉自己不是自己不努力，是这个世界，这个社会的错，与我无关。幻想着如果我能够早出生10年，那么现在我根本什么都不用操心，大学毕业就能够跨越阶级的壁垒，大学就能找到可爱的女朋友，上演曾经单纯而又美好的爱情。我一直被这个社会的负面情绪所左右，仅仅想单纯的摆烂，每天做做白日梦（其实我在高中就经常晚上睡觉的时候幻想）。</p><p>&emsp;&emsp;其实摆烂过的生活一点都不快乐，甚至会更加的难过。没有一点积极的情绪，甚至感觉不到自己存在，只是本能地重复着，如果再没有什么与他人的交际，感觉很容易就抑郁了。其实我现在就有一点感受，因为我最近回家之后看番很容易就哭了，在高中的时候感觉自己基本上不怎么掉眼泪的，甚至看那种催泪番，很多都觉得挺无聊，感觉在负面情绪中呆久了，内心就变得脆弱多了。  </p><h3 id="大一下的暑假"><a href="#大一下的暑假" class="headerlink" title="大一下的暑假"></a>大一下的暑假</h3><p>&emsp;&emsp;其实回家的一个目的是换一下心情的（结果发现回家了就自己一个人），在学校里感觉很累啊，摆烂也很累。没有目标，又没有人陪着，过着确实是煎熬。其实早知道不回来那么早了，我在学校里还可以跑步锻炼锻炼的，回家几乎无事想做，甚至那么多认识的人高考完了都没有找我问一下报考建议，感觉自己已经成为隐形人了。  </p><p>&emsp;&emsp;当然，回家的主要目的当然不是简单的玩耍。因为这可能是我所有的最后的整块时间了，我必须要在这段时间里好好地提高一下自己的编程水平，我在刚刚大一下的时候，我就想好了自己的大学规划，无论现在自己的成绩怎么样，都已经不重要了，无疑是工作和考研咯。我没有什么大志向，赚不到大钱就不赚咯，直接工作或者读研我都能接受。在大二下的暑假去实习，去接触真正的工作流程，然后根据实际情况自己决定是准备考研还是准备秋招。如果考研的话，那我就在大三准备嘛，如过准备工作，那我大三还得实习，然后做做项目了。</p><p> &emsp;&emsp;所以我现在最大的任务当然不是什么预习大物2啥的，我已经深刻的了解了大学学习完全靠自己，甚至思政课的学分都比专业课的高。 </p><p> &emsp;&emsp;回家的第一件事，我决定练习盲打，并且改正自己一直以来错误的打字方法。主要是我之前的打字都是右手占主导，很多时候两个手都放到一起了，右手也经常疼。所以我基本上花了两个星期来熟悉新的打字模式感觉应该对我的打字速度有所提升。当然我不可能每天打字打几个小时的，其实我基本上是玩了两个星期，每天也就打个一个小时左右，到是看了不少番。</p><p> &emsp;&emsp; 结果我这三个月也就练习了一下打字，啥都没干，甚至我连车都没有练。中途去云南旅游了一个星期，算是让自己好好地放松放松吧，自己慢慢感悟一些东西吧。就像旅游一样，其实重要的不是去哪旅游了，重要的是与你同行的人，以及你所遇到的人，更重要的是面对问题，解决问题，我觉得这至少对社恐的我有挺积极的影响的。如今我已经上了一年的大学了，我也一直在寻找我自己在大学里的意义，没有耀眼的分数，没有突出的爱好，没有一起吃喝玩乐的朋友，或许挺失败的吧，但是我似乎一直在抱怨环境，抱怨我没有机会等等，现在想想这样的结果或许和我的性格息息相关。我是一个需要外部推力的人，自己并不会很自律，而且已经没有了曾经对分数有非常强烈的渴望，所以现在成绩不理想很正常；对于爱好，我并没有他人的童年，我很少能像这里的大部分人一样，能够小时候就接触到琴棋书画，甚至我在家里连找个打乒乓球的地方都很困难，再加上自己缺少社交，也没有人能带着我一起去做一些事情，而且我也不喜欢看书，自然自己没有什么爱好；那对于朋友，那就更加的清楚了，我本来就不擅长交朋友，这也合乎情理。</p><p>  &emsp;&emsp;那么或许我的大学就是让我接触到一系列的问题吧，每一个问题都是我性格上的缺陷，也是我做人的缺陷。作为一个内向到极致的人，我觉得或许这就是我大学的意义吧，不断地发现自己身上的缺陷，主动去克服内心的恐惧，学会和他人进行交际，学会尝试各种各样自己未曾尝试过的新事物。我想了挺久，或许一直困住我的一直都是我自己，即使自己拥有了很好的学历，即使自己进入了大城市，与我敢于去尝试之间并没有什么关系。想到老师说的一句话，大学或许是我们试错成本最低的时候了，相比那些努力学习的同学，我现在在大学拥有这么多的额外时间，我可以去作出更多的尝试，健身，具体地学习打乒乓球，去当志愿者，去看漫展，自己出一个cos，去旅游，去挣自己旅游费，去学钢琴，去学游泳，去参加文艺表演，去刷算法题，去参加算法比赛，去实习，去找吃的，去把皇室战争打一个全国排名，去看演唱会，去烫一次头发，甚至去找个女朋友……</p><p>   &emsp;&emsp;努力提升自己吧，加油！</p>]]></content>
    
    
    <summary type="html">用于记录我的宝贵的大学生活，这是我的在大学的第一年的一些随笔和感想，纪念我逝去的青春。</summary>
    
    
    
    
    <category term="school_life" scheme="https://liyi20.github.io/tags/school-life/"/>
    
  </entry>
  
  <entry>
    <title>SJTU_OJ</title>
    <link href="https://liyi20.github.io/posts/96da010c.html"/>
    <id>https://liyi20.github.io/posts/96da010c.html</id>
    <published>2023-04-16T20:55:28.000Z</published>
    <updated>2023-09-15T06:04:10.032Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SJTU-OJ-1387-Huffman-Tree"><a href="#SJTU-OJ-1387-Huffman-Tree" class="headerlink" title="SJTU OJ-1387. Huffman Tree"></a><center>SJTU OJ-1387. Huffman Tree</center></h1><ul><li><p>这道题就是用huffman算法，先创建一个数组储存，我是用parent不断地向上查找找到len的值，我看到别人用的贪心什么的还没学到。</p></li><li><p><em>需要注意的题目给的数据范围，比较狗。</em></p></li><li><p>下面是我的代码部分</p></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> weight=<span class="number">0</span>;</span><br><span class="line">    Node *parent =<span class="literal">NULL</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(Node hfm[], <span class="type">int</span> k, <span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, min, minWeight = <span class="number">1000000000</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = k+<span class="number">1</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((!hfm[i].parent) &amp;&amp; (hfm[i].weight &lt; minWeight))</span><br><span class="line">        &#123;</span><br><span class="line">            min = i; </span><br><span class="line">            minWeight = hfm[min].weight;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node* hfm;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n ==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    hfm = <span class="keyword">new</span> Node[<span class="number">2</span> * n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; hfm[i].weight;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> i = n + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i!= <span class="number">2</span> * n) &#123;</span><br><span class="line">        <span class="type">int</span> min1 = <span class="built_in">min</span>(hfm, <span class="number">0</span>, i);</span><br><span class="line">        hfm[min1].parent = &amp;hfm[i];</span><br><span class="line">        <span class="type">int</span> min2 = <span class="built_in">min</span>(hfm, <span class="number">0</span>, i);</span><br><span class="line">        hfm[min2].parent = &amp;hfm[i];</span><br><span class="line">        hfm[i].weight = hfm[min1].weight + hfm[min2].weight;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">        Node *p = &amp;hfm[i];</span><br><span class="line">        <span class="keyword">while</span> (p-&gt;parent) &#123;</span><br><span class="line">            p = p-&gt;parent;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">        count += hfm[i].weight * len;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="SJTU-OJ-1043-完全二叉树"><a href="#SJTU-OJ-1043-完全二叉树" class="headerlink" title="SJTU OJ-1043. 完全二叉树"></a><center>SJTU OJ-1043. 完全二叉树</center></h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h2><ul><li>给出一棵二叉树，判断其是否为完全二叉树。<h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format:"></a>Input Format:</h2></li><li><p>第一行，N&lt;1000000，表示二叉树节点数。默认序号为0的节点为树根。接下来共N-1行，依次表示序号为1，…，N-1的节点的父亲节点序号。</p></li><li><p>如果一个节点有两个孩子节点，左孩子节点序号总是小于右孩子节点序号。</p><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format:"></a>Output Format:</h2></li><li>输出“true”or“false”<h2 id="Analysis："><a href="#Analysis：" class="headerlink" title="Analysis："></a>Analysis：</h2></li><li>画出不是完全二叉树的情况，将其逐个排除掉，即可得到只剩下完全二叉树的情况。</li><li>先对节点的子节点来分析，一共有3种异常情况：<br>1、只有左孩子<br>2、只有右孩子<br>3、既没有左孩子也没有右孩子</li><li>先挑最简单的情况，只有右孩子的情况，此时该树一定不是完全二叉树（如果有疑惑，建议看看完全二叉树的定义）</li><li>当只有左孩子或者没有孩子的情况下，通过层次遍历则后面一定所有节点都是无孩子的情况（因为完全二叉树要求n-1层是满的）。  <blockquote><p>这里我是直接把我之前写的seqQueue类给复制过来了，其实只要自己照着题目条件稍微搞个数组模拟以下队列就行了   </p></blockquote></li></ul><h2 id="Code："><a href="#Code：" class="headerlink" title="Code："></a>Code：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">seqQueue</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">T* arr;</span><br><span class="line"><span class="type">int</span> maxsize;</span><br><span class="line"><span class="type">int</span> Front, Rear;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doubleSpace</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">seqQueue</span>(<span class="type">int</span> size = <span class="number">100</span>);</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isFull</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">T <span class="title">front</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">enQueue</span><span class="params">(<span class="type">const</span> T&amp; x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deQueue</span><span class="params">()</span></span>;</span><br><span class="line">~<span class="built_in">seqQueue</span>() &#123;</span><br><span class="line"><span class="keyword">delete</span>[]arr;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line">seqQueue&lt;T&gt;::<span class="built_in">seqQueue</span>(<span class="type">int</span> size) &#123;</span><br><span class="line">arr = <span class="keyword">new</span> T[size];</span><br><span class="line">maxsize = size;</span><br><span class="line">Front = Rear = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="type">bool</span> seqQueue&lt;T&gt;::<span class="built_in">isEmpty</span>() &#123;</span><br><span class="line"><span class="keyword">return</span> Front == Rear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="type">bool</span> seqQueue&lt;T&gt;::<span class="built_in">isFull</span>() &#123;</span><br><span class="line"><span class="keyword">return</span> (Rear + <span class="number">1</span>) % maxsize == Front;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line">T seqQueue&lt;T&gt;::<span class="built_in">front</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">isEmpty</span>())</span><br><span class="line"><span class="keyword">return</span> arr[Front];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="type">void</span> seqQueue&lt;T&gt;::<span class="built_in">deQueue</span>() &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">isEmpty</span>())</span><br><span class="line">Front = (Front + <span class="number">1</span>) % maxsize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="type">void</span> seqQueue&lt;T&gt;::<span class="built_in">enQueue</span>(<span class="type">const</span> T&amp; x) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isFull</span>())<span class="built_in">doubleSpace</span>();</span><br><span class="line">arr[Rear] = x;</span><br><span class="line">Rear = (Rear + <span class="number">1</span>) % maxsize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="type">void</span> seqQueue&lt;T&gt;::<span class="built_in">doubleSpace</span>() &#123;</span><br><span class="line">T* temp = <span class="keyword">new</span> T[maxsize * <span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = Front, j = <span class="number">0</span>; i != Rear; i = (i + <span class="number">1</span>) % maxsize, j++)</span><br><span class="line">&#123;</span><br><span class="line">temp[j] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]arr;</span><br><span class="line">arr = temp;</span><br><span class="line">Front = <span class="number">0</span>;</span><br><span class="line">Rear = maxsize - <span class="number">1</span>;</span><br><span class="line">maxsize = <span class="number">2</span> * maxsize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Node* left, * right;</span><br><span class="line"><span class="built_in">Node</span>(Node* left = <span class="literal">NULL</span>, Node* right = <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;left = left;</span><br><span class="line"><span class="keyword">this</span>-&gt;right = right;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isCompleteTree</span><span class="params">(Node* root)</span> </span>&#123;</span><br><span class="line">seqQueue&lt;Node*&gt;que;</span><br><span class="line">que.<span class="built_in">enQueue</span>(root);</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span> (!que.<span class="built_in">isEmpty</span>()) &#123;</span><br><span class="line">Node* p = que.<span class="built_in">front</span>();</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;left || p-&gt;right)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;left &amp;&amp; !p-&gt;right || !p-&gt;left &amp;&amp; !p-&gt;right)flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!p-&gt;left &amp;&amp; p-&gt;right)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">que.<span class="built_in">deQueue</span>();</span><br><span class="line"><span class="keyword">if</span> (p-&gt;left)que.<span class="built_in">enQueue</span>(p-&gt;left);</span><br><span class="line"><span class="keyword">if</span> (p-&gt;right)que.<span class="built_in">enQueue</span>(p-&gt;right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Node* root;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">root = <span class="keyword">new</span> Node[n]();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span> (!root[x].left) &#123; root[x].left = &amp;root[i]; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; root[x].right = &amp;root[i]; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">isCompleteTree</span>(root))cout &lt;&lt; <span class="string">&quot;false&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;true&quot;</span>;</span><br><span class="line"><span class="keyword">delete</span>[]root;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">此篇文章将记录我在数据结构课上做得SJTU_OJ 上的题的文章。写此文章时，博主才刚刚接触算法，且没有竞赛基础，因此水平不佳，仅供参考。</summary>
    
    
    
    
    <category term="study" scheme="https://liyi20.github.io/tags/study/"/>
    
  </entry>
  
</feed>
